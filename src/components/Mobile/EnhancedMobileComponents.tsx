import React from 'react';
import { useNavigate } from 'react-router-dom';
import { useWallet } from '@solana/wallet-adapter-react';
import { useWalletModal } from '@solana/wallet-adapter-react-ui';
import styled from 'styled-components';
import { useBrowser } from '../../hooks/mobile/useBrowser';
import { useWalletToast } from '../../utils/wallet/solanaWalletToast';
import { useNetwork } from '../../contexts/NetworkContext';\n\nconst MobileBrowserButton = styled.button<{ $variant?: 'primary' | 'secondary' | 'ghost' }>`\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n  padding: ${props => props.$variant === 'ghost' ? '6px 12px' : '12px 16px'};\n  background: ${props => \n    props.$variant === 'secondary' ? 'rgba(255, 255, 255, 0.1)' :\n    props.$variant === 'ghost' ? 'transparent' :\n    'linear-gradient(45deg, #ff6b35, #f7931e)'\n  };\n  color: white;\n  border: ${props => props.$variant === 'ghost' ? '1px solid rgba(255, 255, 255, 0.2)' : 'none'};\n  border-radius: 8px;\n  font-size: ${props => props.$variant === 'ghost' ? '12px' : '14px'};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  text-decoration: none;\n  position: relative;\n\n  &:hover {\n    transform: translateY(-1px);\n    background: ${props => \n      props.$variant === 'secondary' ? 'rgba(255, 255, 255, 0.15)' :\n      props.$variant === 'ghost' ? 'rgba(255, 255, 255, 0.1)' :\n      'linear-gradient(45deg, #ff7b45, #f8a31e)'\n    };\n  }\n\n  &:active {\n    transform: translateY(0);\n  }\n\n  svg {\n    width: 16px;\n    height: 16px;\n  }\n`;\n\nconst NativeIndicator = styled.div`\n  position: absolute;\n  top: -4px;\n  right: -4px;\n  width: 8px;\n  height: 8px;\n  background: #00ff88;\n  border-radius: 50%;\n  animation: pulse 2s infinite;\n\n  @keyframes pulse {\n    0%, 100% { opacity: 1; }\n    50% { opacity: 0.5; }\n  }\n`;\n\n// Enhanced Transaction Link Component integrated with your existing Transaction.tsx patterns\ninterface EnhancedTransactionLinkProps {\n  signature: string;\n  cluster?: 'mainnet-beta' | 'devnet';\n  children?: React.ReactNode;\n  variant?: 'primary' | 'secondary' | 'ghost';\n  showSuccessToast?: boolean;\n}\n\nexport const EnhancedTransactionLink: React.FC<EnhancedTransactionLinkProps> = ({\n  signature,\n  cluster,\n  children,\n  variant = 'ghost',\n  showSuccessToast = false\n}) => {\n  const { openTransaction, isNativePlatform } = useBrowser();\n  const { showWalletToast } = useWalletToast();\n  const navigate = useNavigate();\n  const { publicKey } = useWallet();\n\n  const handleClick = async () => {\n    if (isNativePlatform) {\n      // Native app - open in fullscreen browser\n      await openTransaction(signature, cluster);\n      \n      if (showSuccessToast) {\n        showWalletToast('TRANSACTION_SUCCESS', {\n          description: 'Transaction opened in native browser'\n        });\n      }\n    } else {\n      // Web app - navigate to internal transaction page (like your existing Transaction.tsx)\n      const wallet = publicKey?.toBase58() || '';\n      navigate(`/explorer/transaction/${signature}${wallet ? `?user=${wallet}` : ''}`);\n    }\n  };\n\n  return (\n    <MobileBrowserButton onClick={handleClick} $variant={variant}>\n      {isNativePlatform && <NativeIndicator />}\n      {children || (\n        <>\n          <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n            <path d=\"M14,3V5H17.59L7.76,14.83L9.17,16.24L19,6.41V10H21V3M19,19H5V5H12V3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V12H19V19Z\"/>\n          </svg>\n          {isNativePlatform ? 'View in Explorer' : 'View Transaction'}\n        </>\n      )}\n    </MobileBrowserButton>\n  );\n};\n\n// Enhanced Wallet Connection Component integrated with your existing wallet patterns\ninterface EnhancedWalletConnectionProps {\n  onConnect?: () => void;\n  onDisconnect?: () => void;\n  variant?: 'primary' | 'secondary' | 'ghost';\n  showAddressActions?: boolean;\n}\n\nexport const EnhancedWalletConnection: React.FC<EnhancedWalletConnectionProps> = ({\n  onConnect,\n  onDisconnect,\n  variant = 'primary',\n  showAddressActions = true\n}) => {\n  const { connected, publicKey, disconnect } = useWallet();\n  const { setVisible } = useWalletModal();\n  const { openWalletDownload, isNativePlatform } = useBrowser();\n  const { showWalletToast } = useWalletToast();\n  const navigate = useNavigate();\n\n  const handleConnect = () => {\n    if (connected) return;\n    \n    try {\n      setVisible(true);\n      onConnect?.();\n    } catch (error) {\n      // If no wallets available, suggest download\n      showWalletToast('WALLET_NOT_FOUND');\n      if (isNativePlatform) {\n        openWalletDownload('phantom');\n      }\n    }\n  };\n\n  const handleDisconnect = () => {\n    disconnect();\n    onDisconnect?.();\n    showWalletToast('WALLET_DISCONNECTED');\n  };\n\n  const handleCopyAddress = () => {\n    if (publicKey) {\n      navigator.clipboard.writeText(publicKey.toString());\n      showWalletToast('COPY_SUCCESS', {\n        description: 'Wallet address copied to clipboard'\n      });\n    }\n  };\n\n  const handleViewProfile = () => {\n    if (publicKey) {\n      navigate(`/${publicKey.toBase58()}/profile`);\n    }\n  };\n\n  const handleViewOnExplorer = async () => {\n    if (publicKey) {\n      const explorerUrl = `https://solscan.io/account/${publicKey.toString()}`;\n      \n      if (isNativePlatform) {\n        const { openExternal } = useBrowser();\n        await openExternal(explorerUrl, 'Wallet on Solscan');\n      } else {\n        window.open(explorerUrl, '_blank');\n      }\n    }\n  };\n\n  const formatAddress = (address: string) => {\n    return `${address.slice(0, 4)}...${address.slice(-4)}`;\n  };\n\n  if (!connected) {\n    return (\n      <MobileBrowserButton onClick={handleConnect} $variant={variant}>\n        {isNativePlatform && <NativeIndicator />}\n        <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n          <path d=\"M21,18V19A2,2 0 0,1 19,21H5C3.89,21 3,20.1 3,19V5A2,2 0 0,1 5,3H19A2,2 0 0,1 21,5V6H12L10,4H21M12,9H21V7H12M21,11H12V9H21M21,13H12V11H21Z\"/>\n        </svg>\n        {isNativePlatform ? 'Connect Mobile Wallet' : 'Connect Wallet'}\n      </MobileBrowserButton>\n    );\n  }\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\n      <div style={{ display: 'flex', alignItems: 'center', gap: '8px', flexWrap: 'wrap' }}>\n        <span style={{ color: 'white', fontFamily: 'monospace', fontSize: '14px' }}>\n          {formatAddress(publicKey?.toString() || '')}\n        </span>\n        {isNativePlatform && <NativeIndicator />}\n      </div>\n      \n      {showAddressActions && (\n        <div style={{ display: 'flex', gap: '8px', flexWrap: 'wrap' }}>\n          <MobileBrowserButton onClick={handleCopyAddress} $variant=\"ghost\">\n            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"/>\n            </svg>\n            Copy\n          </MobileBrowserButton>\n          \n          <MobileBrowserButton onClick={handleViewProfile} $variant=\"ghost\">\n            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z\"/>\n            </svg>\n            Profile\n          </MobileBrowserButton>\n          \n          <MobileBrowserButton onClick={handleViewOnExplorer} $variant=\"ghost\">\n            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M14,3V5H17.59L7.76,14.83L9.17,16.24L19,6.41V10H21V3M19,19H5V5H12V3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V12H19V19Z\"/>\n            </svg>\n            Explorer\n          </MobileBrowserButton>\n          \n          <MobileBrowserButton onClick={handleDisconnect} $variant=\"secondary\">\n            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M16,17V14H9V10H16V7L21,12L16,17M14,2A2,2 0 0,1 16,4V6H14V4H5V20H14V18H16V20A2,2 0 0,1 14,22H5A2,2 0 0,1 3,20V4A2,2 0 0,1 5,2H14Z\"/>\n            </svg>\n            Disconnect\n          </MobileBrowserButton>\n        </div>\n      )}\n    </div>\n  );\n};