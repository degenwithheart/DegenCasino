{
  "timestamp": "2025-08-22T01:49:11.781Z",
  "testType": "accurate_visual_payout_integration",
  "description": "Analysis of actual game implementations for visual/payout consistency",
  "summary": {
    "total": 9,
    "passed": 8,
    "failed": 1,
    "errors": 0
  },
  "results": [
    {
      "gameId": "blackjack",
      "betArrayAnalysis": {
        "type": "static_array",
        "multipliers": [
          2.3,
          1.85,
          1,
          0
        ],
        "expectedOutcomes": [
          {
            "multiplier": 1.85,
            "probability": 0.42,
            "outcome": "player_win"
          },
          {
            "multiplier": 2.3,
            "probability": 0.05,
            "outcome": "player_blackjack"
          },
          {
            "multiplier": 1,
            "probability": 0.08,
            "outcome": "push"
          },
          {
            "multiplier": 0,
            "probability": 0.45,
            "outcome": "player_lose"
          }
        ]
      },
      "visualLogicAnalysis": {
        "usesResultMultiplier": false,
        "usesResultPayout": true,
        "usesPayoutMultiplier": true,
        "hardcodedChecks": [
          2.5,
          2,
          0
        ],
        "dynamicLogic": {
          "usesResultDirectly": false,
          "hasConditionalLogic": false,
          "generatesFromResult": true
        },
        "visualGeneration": {
          "hasCardGeneration": true,
          "usesPayoutMultiplier": true,
          "hasSeedGeneration": true,
          "forcesMismatches": true
        }
      },
      "mismatches": [
        {
          "type": "hardcoded_mismatch",
          "expected": [
            2.3,
            1.85,
            1,
            0
          ],
          "found": 2.5,
          "description": "Visual logic checks for 2.5x but bet array only contains [2.3, 1.85, 1, 0]"
        },
        {
          "type": "hardcoded_mismatch",
          "expected": [
            2.3,
            1.85,
            1,
            0
          ],
          "found": 2,
          "description": "Visual logic checks for 2x but bet array only contains [2.3, 1.85, 1, 0]"
        },
        {
          "type": "missing_visual_logic",
          "expected": 2.3,
          "found": null,
          "description": "Bet array contains 2.3x but no visual logic handles this multiplier"
        },
        {
          "type": "missing_visual_logic",
          "expected": 1.85,
          "found": null,
          "description": "Bet array contains 1.85x but no visual logic handles this multiplier"
        },
        {
          "type": "missing_visual_logic",
          "expected": 1,
          "found": null,
          "description": "Bet array contains 1x but no visual logic handles this multiplier"
        }
      ],
      "status": "fail"
    },
    {
      "gameId": "slots",
      "betArrayAnalysis": {
        "type": "static_array",
        "multipliers": [
          60,
          20,
          8,
          3,
          1.8,
          0
        ],
        "expectedOutcomes": [
          {
            "multiplier": 150,
            "probability": 0.001,
            "outcome": "unicorn"
          },
          {
            "multiplier": 60,
            "probability": 0.002,
            "outcome": "dghrt"
          },
          {
            "multiplier": 20,
            "probability": 0.005,
            "outcome": "sol"
          },
          {
            "multiplier": 8,
            "probability": 0.015,
            "outcome": "usdc"
          },
          {
            "multiplier": 3,
            "probability": 0.08,
            "outcome": "jup"
          },
          {
            "multiplier": 1.8,
            "probability": 0.12,
            "outcome": "bonk"
          },
          {
            "multiplier": 0,
            "probability": 0.777,
            "outcome": "wojak_loss"
          }
        ]
      },
      "visualLogicAnalysis": {
        "usesResultMultiplier": true,
        "usesResultPayout": true,
        "usesPayoutMultiplier": false,
        "hardcodedChecks": [],
        "dynamicLogic": {
          "usesResultDirectly": false,
          "hasConditionalLogic": false,
          "generatesFromResult": true
        },
        "visualGeneration": {
          "hasSlotGeneration": true,
          "usesResultMultiplier": true,
          "isDeterministic": true
        }
      },
      "mismatches": [],
      "status": "pass"
    },
    {
      "gameId": "flip",
      "betArrayAnalysis": {
        "type": "dynamic_side_based",
        "multipliers": [
          1.92,
          0
        ],
        "expectedOutcomes": [
          {
            "multiplier": 1.92,
            "probability": 0.5,
            "outcome": "win_chosen_side"
          },
          {
            "multiplier": 0,
            "probability": 0.5,
            "outcome": "lose_opposite_side"
          }
        ]
      },
      "visualLogicAnalysis": {
        "usesResultMultiplier": false,
        "usesResultPayout": true,
        "usesPayoutMultiplier": false,
        "hardcodedChecks": [],
        "dynamicLogic": {
          "usesResultDirectly": false,
          "hasConditionalLogic": false,
          "generatesFromResult": false
        },
        "visualGeneration": {
          "isGeneric": true
        }
      },
      "mismatches": [],
      "status": "pass"
    },
    {
      "gameId": "dice",
      "betArrayAnalysis": {
        "type": "dynamic_calculated",
        "function": "calculateBetArray(rollUnder)",
        "multipliers": [
          1.9,
          0
        ],
        "expectedOutcomes": [
          {
            "multiplier": "~1.9",
            "probability": "rollUnder/100",
            "outcome": "roll_under_target"
          },
          {
            "multiplier": 0,
            "probability": "(100-rollUnder)/100",
            "outcome": "roll_over_target"
          }
        ]
      },
      "visualLogicAnalysis": {
        "usesResultMultiplier": true,
        "usesResultPayout": true,
        "usesPayoutMultiplier": false,
        "hardcodedChecks": [],
        "dynamicLogic": {
          "usesResultDirectly": true,
          "hasConditionalLogic": false,
          "generatesFromResult": true
        },
        "visualGeneration": {
          "isGeneric": true
        }
      },
      "mismatches": [],
      "status": "pass"
    },
    {
      "gameId": "mines",
      "betArrayAnalysis": {
        "type": "dynamic_calculated",
        "function": "generateBetArray(mineCount, cellsRevealed)",
        "multipliers": [
          1.32,
          1.71,
          2.23,
          0
        ],
        "expectedOutcomes": [
          {
            "multiplier": "calculated",
            "probability": "depends_on_mines",
            "outcome": "safe_cell"
          },
          {
            "multiplier": 0,
            "probability": "mineCount/remainingCells",
            "outcome": "hit_mine"
          }
        ]
      },
      "visualLogicAnalysis": {
        "usesResultMultiplier": false,
        "usesResultPayout": true,
        "usesPayoutMultiplier": false,
        "hardcodedChecks": [],
        "dynamicLogic": {
          "usesResultDirectly": false,
          "hasConditionalLogic": false,
          "generatesFromResult": false
        },
        "visualGeneration": {
          "usesPayoutCheck": true,
          "hasGridReveal": true,
          "isDynamic": true
        }
      },
      "mismatches": [],
      "status": "pass"
    },
    {
      "gameId": "plinko",
      "betArrayAnalysis": {
        "type": "static_buckets",
        "multipliers": [
          2.8,
          2.2,
          1.2,
          1,
          9.5,
          0
        ],
        "expectedOutcomes": [
          {
            "multiplier": 2.8,
            "probability": 0.125,
            "outcome": "edge_bucket_normal"
          },
          {
            "multiplier": 9.5,
            "probability": 0.1,
            "outcome": "edge_bucket_degen"
          },
          {
            "multiplier": 0,
            "probability": "varies",
            "outcome": "center_buckets"
          }
        ]
      },
      "visualLogicAnalysis": {
        "usesResultMultiplier": true,
        "usesResultPayout": false,
        "usesPayoutMultiplier": false,
        "hardcodedChecks": [],
        "dynamicLogic": {
          "usesResultDirectly": false,
          "hasConditionalLogic": false,
          "generatesFromResult": false
        },
        "visualGeneration": {
          "isGeneric": true
        }
      },
      "mismatches": [],
      "status": "pass"
    },
    {
      "gameId": "crash",
      "betArrayAnalysis": {
        "type": "unknown",
        "multipliers": [],
        "expectedOutcomes": []
      },
      "visualLogicAnalysis": {
        "usesResultMultiplier": false,
        "usesResultPayout": true,
        "usesPayoutMultiplier": false,
        "hardcodedChecks": [],
        "dynamicLogic": {
          "usesResultDirectly": false,
          "hasConditionalLogic": false,
          "generatesFromResult": true
        },
        "visualGeneration": {
          "isGeneric": true
        }
      },
      "mismatches": [],
      "status": "pass"
    },
    {
      "gameId": "hilo",
      "betArrayAnalysis": {
        "type": "unknown",
        "multipliers": [],
        "expectedOutcomes": []
      },
      "visualLogicAnalysis": {
        "usesResultMultiplier": false,
        "usesResultPayout": true,
        "usesPayoutMultiplier": false,
        "hardcodedChecks": [],
        "dynamicLogic": {
          "usesResultDirectly": false,
          "hasConditionalLogic": false,
          "generatesFromResult": true
        },
        "visualGeneration": {
          "isGeneric": true
        }
      },
      "mismatches": [],
      "status": "pass"
    },
    {
      "gameId": "progressivepoker",
      "betArrayAnalysis": {
        "type": "unknown",
        "multipliers": [],
        "expectedOutcomes": []
      },
      "visualLogicAnalysis": {
        "usesResultMultiplier": false,
        "usesResultPayout": true,
        "usesPayoutMultiplier": false,
        "hardcodedChecks": [],
        "dynamicLogic": {
          "usesResultDirectly": false,
          "hasConditionalLogic": false,
          "generatesFromResult": false
        },
        "visualGeneration": {
          "isGeneric": true
        }
      },
      "mismatches": [],
      "status": "pass"
    }
  ],
  "criticalFindings": [
    {
      "game": "blackjack",
      "mismatches": [
        {
          "type": "hardcoded_mismatch",
          "expected": [
            2.3,
            1.85,
            1,
            0
          ],
          "found": 2.5,
          "description": "Visual logic checks for 2.5x but bet array only contains [2.3, 1.85, 1, 0]"
        },
        {
          "type": "hardcoded_mismatch",
          "expected": [
            2.3,
            1.85,
            1,
            0
          ],
          "found": 2,
          "description": "Visual logic checks for 2x but bet array only contains [2.3, 1.85, 1, 0]"
        },
        {
          "type": "missing_visual_logic",
          "expected": 2.3,
          "found": null,
          "description": "Bet array contains 2.3x but no visual logic handles this multiplier"
        },
        {
          "type": "missing_visual_logic",
          "expected": 1.85,
          "found": null,
          "description": "Bet array contains 1.85x but no visual logic handles this multiplier"
        },
        {
          "type": "missing_visual_logic",
          "expected": 1,
          "found": null,
          "description": "Bet array contains 1x but no visual logic handles this multiplier"
        }
      ]
    }
  ]
}