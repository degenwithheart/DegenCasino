import js from '@eslint/js';
import tseslint from '@typescript-eslint/eslint-plugin';
import tsparser from '@typescript-eslint/parser';

export default [
    js.configs.recommended,
    {
        files: ['**/*.{js,jsx,ts,tsx}'],
        languageOptions: {
            ecmaVersion: 'latest',
            sourceType: 'module',
            parser: tsparser,
            parserOptions: {
                ecmaFeatures: {
                    jsx: true,
                },
            },
            globals: {
                // Browser globals
                window: 'readonly',
                document: 'readonly',
                navigator: 'readonly',
                console: 'readonly',
                localStorage: 'readonly',
                sessionStorage: 'readonly',
                fetch: 'readonly',
                setTimeout: 'readonly',
                clearTimeout: 'readonly',
                setInterval: 'readonly',
                clearInterval: 'readonly',
                requestAnimationFrame: 'readonly',
                cancelAnimationFrame: 'readonly',
                requestIdleCallback: 'readonly',
                cancelIdleCallback: 'readonly',
                performance: 'readonly',
                alert: 'readonly',
                confirm: 'readonly',
                prompt: 'readonly',
                CustomEvent: 'readonly',
                KeyboardEvent: 'readonly',
                MouseEvent: 'readonly',
                TouchEvent: 'readonly',
                HTMLDivElement: 'readonly',
                HTMLImageElement: 'readonly',
                HTMLSpanElement: 'readonly',
                HTMLButtonElement: 'readonly',
                HTMLInputElement: 'readonly',
                HTMLSelectElement: 'readonly',
                HTMLCanvasElement: 'readonly',
                HTMLElement: 'readonly',
                Element: 'readonly',
                Node: 'readonly',
                NodeJS: 'readonly',
                TextEncoder: 'readonly',
                crypto: 'readonly',
                WebGLRenderingContext: 'readonly',
                GLenum: 'readonly',
                CanvasRenderingContext2D: 'readonly',
                Image: 'readonly',
                JSX: 'readonly',
                React: 'readonly',
                matchMedia: 'readonly',
                AbortController: 'readonly',
                IntersectionObserver: 'readonly',
                IntersectionObserverInit: 'readonly',
                PerformanceObserver: 'readonly',
                MessageChannel: 'readonly',
                URLSearchParams: 'readonly',
                CSSStyleSheet: 'readonly',
                NodeFilter: 'readonly',
                WheelEvent: 'readonly',
                PointerEvent: 'readonly',
                ErrorEvent: 'readonly',
                PromiseRejectionEvent: 'readonly',
                Event: 'readonly',
                // Node.js globals for config files
                process: 'readonly',
                __dirname: 'readonly',
                __filename: 'readonly',
                global: 'readonly',
                Buffer: 'readonly',
                require: 'readonly',
                module: 'readonly',
                exports: 'readonly',
            },
        },
        plugins: {
            '@typescript-eslint': tseslint,
        },
        rules: {
            'no-unused-vars': 'warn',
            'no-console': 'off',
            'no-constant-condition': 'off', // Allow constant conditions in some cases
            '@typescript-eslint/no-unused-vars': 'warn',
            '@typescript-eslint/no-explicit-any': 'warn',
            '@typescript-eslint/no-empty-interface': 'off', // Allow empty interfaces for type augmentation
        },
    },
];